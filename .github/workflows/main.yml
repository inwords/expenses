name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Store your Docker Hub username in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }} # Store your Docker Hub password in GitHub Secrets

      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ruggedbl/commonex-nest-backend:latest

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./web
          push: true
          tags: ruggedbl/commonex-next-web:latest

      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} << EOF
            cd ${{ secrets.APP_PATH }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
            POSTGRES_USER_NAME=${{ secrets.POSTGRES_USER_NAME }} \
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }} \
            OPEN_EXCHANGE_RATES_API_ID=${{ secrets.OPEN_EXCHANGE_RATES_API_ID }} \
            GF_SECURITY_ADMIN_USER=${{ secrets.GF_SECURITY_ADMIN_USER }} \
            GF_SECURITY_ADMIN_PASSWORD=${{ secrets.GF_SECURITY_ADMIN_PASSWORD }} \
            docker compose -f docker-compose-prod.yml up -d --pull always
          EOF
